"X1","X2","X3","X4","X5","X6","X7","X8","X9","X10"
"dataframe","visit","","","","","",,,
"tablename","tblVIS","","","","","",,,
"id","patient","","","","","",,,
"expected","patient","center","vis_d","weigh","heigh","cdc_stage","who_stage",,
"optional","vis_d_a","","","","","",,,
"validate","extravar","","","","","",,,
"validate","missvar","","","","","",,,
"validate","notdate","vis_d","","","","",,,
"validate","missingvalue","center","","","","",,,
"validate","missingvalue","vis_d","","","","",,,
"transform","convertdate","vis_d","","","","",,,
"branch","exists('basic')","","","","","",,,
"transform","merge","basvisit","basic","patient","birth_d","",,,
"transform","convertdate","birth_d","basvisit","","","",,,
"validate","outoforder","birth_d","vis_d","tblBAS","table::basvisit","",,,
"branch","END","","","","","",,,
"branch","exists('ltfu')","","","","","",,,
"transform","merge","ltfuvisit","ltfu","patient","death_d","",,,
"transform","convertdate","death_d","ltfuvisit","","","",,,
"validate","outoforder","vis_d","death_d","tblLTFU","table::ltfuvisit","",,,
"branch","END","","","","","",,,
"validate","futuredate","vis_d","","","","",,,
"validate","notnumeric","heigh","","","","",,,
"validate","notnumeric","weigh","","","","",,,
"transform","forcenumber","heigh","","","","",,,
"transform","forcenumber","weigh","","","","",,,
"transform","forcenumber","who_stage","","","","",,,
"transform","assign","visit$weigh[visit$weigh==999]",NA,"","","",,,
"transform","assign","visit$heigh[visit$heigh==999]",NA,"","","",,,
"validate","queryduplicates","patient","vis_d","","","",,,
"validate","upperrangecheck","weigh","120","","","",,,
"validate","lowerrangecheck","weigh","0","","","",,,
"validate","upperrangecheck","heigh","220","","","",,,
"validate","lowerrangecheck","heigh","0","","","",,,
"validate","badcodes","who_stage","c(1,2,3,4,9)","","","",,,
"validate","badcodes","cdc_stage","c('A','A1','A2','A3','B','B1','B2','B3','C','C1','C2','C3','9')","","","",,,
"validate","badcodes","vis_d_a","c('<','>','D','M','Y','U')","","","",,,
"validate","badrecord","patient","visit","basic","","",,,
# need missrecord
"validate","missrecord","patient","basic","visit","","",,,
"validate","badrecord","center","visit","center","","",,,

## QUERY ANY HEIGHT DECREASES FROM ONE VISIT TO THE NEXT
if(exists("heigh",visit)){
    qheigh <- visit[with(visit,order(patient,vis_d)),]
    qheigh <- qheigh[!is.na(qheigh$heigh),]
    qheigh$heightdelta <- with(qheigh,unsplit(lapply(split(heigh, patient), FUN=function(x) c(NA, diff(x))), patient))
    recerr <- which(!is.na(qheigh$heightdelta) & qheigh$heightdelta < 0)
    if(length(recerr)>0){
        query <- data.frame(qheigh$patient[recerr],
                tablename,
                "heigh",
                "Logic",
                "Out of Range",
                paste(paste0("vis_d=",qheigh$vis_d[recerr-1]),paste0("heigh=",qheigh$heigh[recerr-1]),
                      paste0("vis_d=",qheigh$vis_d[recerr]),  paste0("heigh=",qheigh$heigh[recerr]),sep="&"),
                stringsAsFactors=FALSE)
        names(query) <- names(emptyquery)
        assign(paste("query",index,sep=""),query,envir=globalenv()); index <<- index + 1
    }
}
